cmake_minimum_required(VERSION 2.6)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

project(gci)
subdirs(FCIdump memory)
enable_language(Fortran)

file (GLOB SRCS *.cpp *.h *.F90)
add_definitions(-DNOMAIN)
add_executable(gci.exe ${SRCS})

include_directories(FCIdump memory)
target_link_libraries(gci.exe FCIdump memory)
link_directories(${CMAKE_BINARY_DIR}/FCIdump ${CMAKE_BINARY_DIR}/memory)

get_filename_component(COMPILER_NAME  ${CMAKE_CXX_COMPILER} NAME)
if (${COMPILER_NAME} STREQUAL "mpic++")
find_package(ppidd)
if (GA_FOUND)
include_directories(${PPIDD_INCLUDE_DIRS})
target_link_libraries(gci.exe ${PPIDD_LIBRARIES} ${GA_LIBRARIES})
add_definitions(-DGCI_PARALLEL)
endif (GA_FOUND)
endif (${COMPILER_NAME} STREQUAL "mpic++")

find_package(MKL)
if (MKL_FOUND)
include_directories(${MKL_INCLUDE_DIRS})
message("MKL link libraries are ${MKL_LIBRARIES}")
target_link_libraries(gci.exe ${MKL_LIBRARIES})
else (MKL_FOUND)
find_package(BLAS REQUIRED)
if (BLAS_FOUND)
include_directories(${BLAS_INCLUDE_DIRS})
target_link_libraries(gci.exe ${BLAS_LIBRARY})
message("Blas link library is ${BLAS_LIBRARIES}")
else (BLAS_FOUND)
target_link_libraries(gci.exe -llapack)
endif (BLAS_FOUND)
endif (MKL_FOUND)

configure_file(gci.fcidump gci.fcidump COPYONLY)
